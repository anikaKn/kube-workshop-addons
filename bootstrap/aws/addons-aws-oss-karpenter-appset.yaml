---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: addons-aws-karpenter
spec:
  syncPolicy:
    preserveResourcesOnDeletion: true
  generators:
    - merge:
        mergeKeys: [server]
        generators:
          - clusters:
              values:
                addonChart: karpenter
                # anything not staging or prod use this version
                addonChartVersion: v1.1.1
                # using oci repostory already configure in argocd
                # argocd repo add public.ecr.aws --type helm --name aws-public-ecr --enable-oci
                addonChartRepository: public.ecr.aws
                installCRDs: "false"  # Disable in main chart since we'll handle separately
              selector:
                matchExpressions:
                  - key: enable_karpenter
                    operator: In
                    values: ['true']
          - clusters:
              selector:
                matchLabels:
                  environment: staging
              values:
                addonChartVersion: v1.1.1
          - clusters:
              selector:
                matchLabels:
                  environment: prod
              values:
                addonChartVersion: v1.1.1
  template:
    metadata:
      name: addon-{{name}}-{{values.addonChart}}
    spec:
      project: default
      sources:
        # Source 1: Values reference
        - repoURL: '{{metadata.annotations.addons_repo_url}}'
          targetRevision: '{{metadata.annotations.addons_repo_revision}}'
          ref: values
        
        # Source 2: CRD Installation (MUST COME FIRST)
        - chart: karpenter/karpenter-crd
          repoURL: '{{values.addonChartRepository}}'
          targetRevision: '{{values.addonChartVersion}}'
          helm:
            releaseName: '{{values.addonChart}}-crd'
            ignoreMissingValueFiles: true
            values: |
              webhook:
                enabled: "true"
                serviceName: karpenter
                serviceNamespace: '{{metadata.annotations.karpenter_namespace}}'
        
        # Source 3: Node Setup
        - repoURL: '{{metadata.annotations.addons_repo_url}}'
          targetRevision: '{{metadata.annotations.addons_repo_revision}}'
          path: 'charts/addons/{{values.addonChart}}/setup'
          helm: 
            releaseName: '{{values.addonChart}}-setup-nodes'
            ignoreMissingValueFiles: true
            valueFiles:
              - $values/{{metadata.annotations.addons_repo_basepath}}charts/addons/{{values.addonChart}}/setup/values.yaml
              - $values/{{metadata.annotations.addons_repo_basepath}}environments/{{metadata.labels.environment}}/addons/{{values.addonChart}}/values.yaml
              - $values/{{metadata.annotations.addons_repo_basepath}}clusters/{{name}}/addons/{{values.addonChart}}/values.yaml
            parameters:
              - name: "nodes_setup.node_iam_role_name"
                value: '{{metadata.annotations.karpenter_node_iam_role_name}}'
              - name: "nodes_setup.cluster_name"
                value: '{{metadata.annotations.aws_cluster_name}}'
              - name: "nodes_setup.environment"
                value: '{{metadata.labels.environment}}'
              - name: "nodepool.capacity_type"
                value: '{{metadata.annotations.karpenter_capacity_type}}'        
        # - chart: '{{values.addonChart}}/{{values.addonChart}}'
        #   repoURL: '{{values.addonChartRepository}}'
        #   targetRevision: '{{values.addonChartVersion}}'
        #   helm:
        #     releaseName: '{{values.addonChart}}'
        #     ignoreMissingValueFiles: true
        #     valueFiles:
        #       - $values/{{metadata.annotations.addons_repo_basepath}}charts/addons/{{values.addonChart}}/values.yaml
        #       - $values/{{metadata.annotations.addons_repo_basepath}}environments/{{metadata.labels.environment}}/addons/{{values.addonChart}}/values.yaml
        #       - $values/{{metadata.annotations.addons_repo_basepath}}clusters/{{name}}/addons/{{values.addonChart}}/values.yaml
        #     values: |
        #       settings:
        #         aws:
        #           clusterName: {{metadata.annotations.aws_cluster_name}}
        #           defaultInstanceProfile: {{metadata.annotations.karpenter_node_instance_profile_name}}
        #           interruptionQueueName: {{metadata.annotations.karpenter_sqs_queue_name}}
        #       serviceAccount:
        #         name: {{metadata.annotations.karpenter_service_account}}
        #         annotations:
        #           eks.amazonaws.com/role-arn: {{metadata.annotations.karpenter_iam_role_arn}}
      destination:
        namespace: '{{metadata.annotations.karpenter_namespace}}'
        name: '{{name}}'
      syncPolicy:
        automated: {}
        syncOptions:
          - CreateNamespace=true
          - ServerSideApply=true  # Big CRDs.
